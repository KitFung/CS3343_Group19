package simulator;
import java.util.*;
import org.joda.time.DateTime;

import java.util.ArrayList;

public class EventScheduler {
	
	private static int OPEN_HOUR = 8;
	private static int TOTAL_HOUR = 1;
	private ArrayList<CustomerEvent> eventlist;
	DateTime dt = new DateTime(2015 , 10 , 15 , OPEN_HOUR , 0);
	private Map<Integer , Integer> hourCoeff;			// Key-value hour=key
	private Manager manager;
	
	private static EventScheduler instance = new EventScheduler();
	public static EventScheduler getInstance() { return instance;};
	
	private EventScheduler()
	{
		eventlist = new ArrayList<CustomerEvent>();
		manager = new Manager();
	}
	
	
	public void executeEvents()
	{
		while(eventlist.size() > 0)
		{
			eventlist.get(0).execute();
			eventlist.remove(0);
		}
	}
	
	public void addEvents(CustomerEvent event)
	{
		eventlist.add(event);
		Collections.sort(eventlist , new DateTimeComparator());
	}
	
	public void generateArriveEvents()
	{
		for(int i = 0 ; i < TOTAL_HOUR ; i++)
		{
			int count = generateTotalCustomersInhour(10 , i);	// <-- should be generated by RNG ( how many customers )
			//for(int j = 0 ; j < shutdown ; j++)    <-- outermost hour , inner : no. in minutes.
			for(int j = 0; j < count ; j++)
			{
				Random rng = new Random();
				int m = rng.nextInt(61);
				DateTime jqeTime = dt.plusMinutes(m);
				CustomerGroup cg = new CustomerGroup();
				CustomerJoinQueueEvent jqe = new CustomerJoinQueueEvent(jqeTime , cg , manager);
				addEvents(jqe);
			}
		}
	}
	
	private int generateTotalCustomersInhour(int coeff , int hour)
	{
		
		return 5;
	}
}
